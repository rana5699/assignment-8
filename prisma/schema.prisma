// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Customer model 
model Customer {
  customerId String   @id @default(uuid()) @unique
  name       String   
  email      String   @unique  
  phone      String   
  createdAt  DateTime @default(now()) 

  bikes Bike[]  // One-to-many relation to bikes

  @@map("customers")  // Mapping to the 'customers' table in the database
}

// Bike model 
model Bike {
  bikeId     String @id @default(uuid()) @unique  
  brand      String  
  model      String  
  year       Int     
  customerId String  

  customer Customer @relation(fields: [customerId], references: [customerId]) // Relation to Customer

  servicesRecords ServiceRecord[]  // One-to-many relation to ServiceRecord

  @@map("bikes")  // Mapping to the 'bikes' table in the database
}

// ServiceRecord model 
model ServiceRecord {
  serviceId      String        @id @default(uuid()) @unique  
  bikeId         String        
  serviceDate    DateTime     
  completionDate DateTime?     
  description    String      
  status         ServiceStatus 

  bike Bike @relation(fields: [bikeId], references: [bikeId]) // Relation to Bike

  @@map("services")  // Mapping to the 'services' table in the database
}

// Enum for service status
enum ServiceStatus {
  pending      
  in_progress 
  done        
}